apiVersion: batch/v1
kind: Job
metadata:
  name: db-migration
  namespace: default
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: migration
        image: rejdeboer.azurecr.io/multiplayer-server:61ad93a0675da94c2ae29c79a5bd58dcf193dc0b
        command:
          - /bin/sh
          - -c
          - |
            echo "Starting migration"
            apk --no-cache add postgresql-client
            CGO_ENABLED=0 GOOS=linux go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
            export DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=verify-full&sslrootcert=/etc/ssl/certs/az-root.pem
            migrate -database ${DATABASE_URL} -path=db/migrations up
            echo "Migration finished"
        volumeMounts:
          - name: secrets-store
            mountPath: "/mnt/secrets-store"
            readOnly: true
          - name: az-root-certificate
            mountPath: "/etc/ssl/certs"
            readOnly: true
        env:
          - name: DB_HOST
            value: multiplayer-server.postgres.database.azure.com
          - name: DB_PORT
            value: "5432"
          - name: DB_NAME
            value: multiplayer-server
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: multiplayer-server-secrets
                key: postgres-username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: multiplayer-server-secrets
                key: postgres-password
      volumes:
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "secret-provider"
        - name: az-root-certificate
          configMap:
            name: az-root-certificate
